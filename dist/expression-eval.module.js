import e from"jsep";export{default as parse}from"jsep";var r=function(e,r,n){var i=function e(n){try{var i,c=n;switch(c.type){case"ArrayExpression":return Promise.resolve(s(c.elements));case"BinaryExpression":return Promise.resolve(Promise.all([e(c.left),e(c.right)])).then(function(e){return t[c.operator](e[0],e[1])});case"CallExpression":var a,l,f,p=function(){if("function"==typeof l){var e=l,r=e.apply,n=a;return Promise.resolve(s(c.arguments)).then(function(t){return Promise.resolve(r.call(e,n,t))})}},m="MemberExpression"===c.callee.type?Promise.resolve(u(c.callee)).then(function(e){a=(f=e)[0],l=f[1]}):Promise.resolve(e(c.callee)).then(function(e){l=e});return Promise.resolve(m&&m.then?m.then(p):p());case"ConditionalExpression":return Promise.resolve(e(c.test)).then(function(r){return Promise.resolve(e(r?c.consequent:c.alternate))});case"Identifier":return Promise.resolve(r[c.name]);case"Literal":return Promise.resolve(c.value);case"LogicalExpression":var v=function(r){return i?r:Promise.resolve(Promise.all([e(c.left),e(c.right)])).then(function(e){return t[c.operator](e[0],e[1])})},h="||"===c.operator?(i=1,Promise.resolve(e(c.left)).then(function(r){return r||Promise.resolve(e(c.right))})):function(){if("&&"===c.operator)return i=1,Promise.resolve(e(c.left)).then(function(r){return r?Promise.resolve(e(c.right)):r})}();return Promise.resolve(h&&h.then?h.then(v):v(h));case"MemberExpression":return Promise.resolve(u(c)).then(function(e){return e[1]});case"ThisExpression":return Promise.resolve(r);case"UnaryExpression":var P=o[c.operator];return Promise.resolve(e(c.argument)).then(function(e){return P.call(o,e)});default:return Promise.resolve(void 0)}}catch(e){return Promise.reject(e)}},u=function(e){try{return Promise.resolve(i(e.object)).then(function(r){return e.computed?Promise.resolve(i(e.property)).then(function(e){return[r,r[e]]}):[r,n.implicitOptionalChaining&&null==r?void 0:r[e.property.name]]})}catch(e){return Promise.reject(e)}},s=function(e){try{return Promise.resolve(Promise.all(e.map(function(e){return i(e)})))}catch(e){return Promise.reject(e)}};return void 0===n&&(n={}),i(e)},n={"||":1,"&&":2,"|":3,"^":4,"&":5,"==":6,"!=":6,"===":6,"!==":6,"<":7,">":7,"<=":7,">=":7,"<<":8,">>":8,">>>":8,"+":9,"-":9,"*":10,"/":10,"%":10},t={"||":function(e,r){return e||r},"&&":function(e,r){return e&&r},"|":function(e,r){return e|r},"^":function(e,r){return e^r},"&":function(e,r){return e&r},"==":function(e,r){return e==r},"!=":function(e,r){return e!=r},"===":function(e,r){return e===r},"!==":function(e,r){return e!==r},"<":function(e,r){return e<r},">":function(e,r){return e>r},"<=":function(e,r){return e<=r},">=":function(e,r){return e>=r},"<<":function(e,r){return e<<r},">>":function(e,r){return e>>r},">>>":function(e,r){return e>>>r},"+":function(e,r){return e+r},"-":function(e,r){return e-r},"*":function(e,r){return e*r},"/":function(e,r){return e/r},"%":function(e,r){return e%r}},o={"-":function(e){return-e},"+":function(e){return+e},"~":function(e){return~e},"!":function(e){return!e}};function i(e,r,n){function i(e){return e.map(function(e){return s(e)})}function u(e){var r=s(e.object);return e.computed?[r,r[s(e.property)]]:[r,n.implicitOptionalChaining&&null==r?void 0:r[e.property.name]]}function s(e){var n=e;switch(n.type){case"ArrayExpression":return i(n.elements);case"BinaryExpression":return t[n.operator](s(n.left),s(n.right));case"CallExpression":var c,a,l;if("MemberExpression"===n.callee.type?(c=(l=u(n.callee))[0],a=l[1]):a=s(n.callee),"function"!=typeof a)return;return a.apply(c,i(n.arguments));case"ConditionalExpression":return s(n.test)?s(n.consequent):s(n.alternate);case"Identifier":return r[n.name];case"Literal":return n.value;case"LogicalExpression":return"||"===n.operator?s(n.left)||s(n.right):"&&"===n.operator?s(n.left)&&s(n.right):t[n.operator](s(n.left),s(n.right));case"MemberExpression":return u(n)[1];case"ThisExpression":return r;case"UnaryExpression":return o[n.operator](s(n.argument));default:return}}return void 0===n&&(n={}),s(e)}function u(r){return i.bind(null,e(r))}function s(n){return r.bind(null,e(n))}function c(r,n){e.addUnaryOp(r),o[r]=n}function a(r,o,i){i?(e.addBinaryOp(r,o),t[r]=i):(e.addBinaryOp(r,n[r]||1),t[r]=o)}export{a as addBinaryOp,c as addUnaryOp,u as compile,s as compileAsync,i as eval,r as evalAsync};
//# sourceMappingURL=expression-eval.module.js.map
